name: Build Padavan-NG for YK-L1

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Padavan-NG分支'
        default: 'main'
        required: false
      commit:
        description: 'Padavan-NG提交哈希'
        required: false
      custom_config:
        description: '使用自定义配置'
        type: boolean
        default: false
        required: false

  push:
    branches:
      - main
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    defaults: { run: { shell: bash } }
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup build environment
      run: |
        sudo apt-get update
        sudo apt-get install -y git make gcc g++ binutils autoconf patch bzip2 flex \
          bison libncurses5-dev zlib1g-dev unzip libssl-dev wget gettext \
          xz-utils python3 python3-pip file tar rsync zstd libtool automake pkg-config \
          cmake gperf texinfo gawk
        
    - name: Download Padavan-NG source code
      run: |
        BRANCH="${{ github.event.inputs.branch || 'main' }}"
        echo "Using branch: $BRANCH"
        
        git clone -b $BRANCH https://github.com/h8820/hadzhioglu-padavan-ng.git padavan-ng
        cd padavan-ng
        
        if [ -n "${{ github.event.inputs.commit }}" ]; then
          echo "Checking out commit: ${{ github.event.inputs.commit }}"
          git checkout ${{ github.event.inputs.commit }}
        fi
        
        echo "Current commit: $(git rev-parse HEAD)"
        
    - name: Download toolchain
      run: |
        cd padavan-ng
        TOOLCHAIN_URL="https://github.com/h8820/padavan-toolchain/releases/download/v1.0/padavan-toolchain-mipsel.tar.zst"
        echo "Downloading toolchain..."
        wget -q -O toolchain.tar.zst $TOOLCHAIN_URL
        echo "Extracting toolchain..."
        tar -C ./ --zstd -xf toolchain.tar.zst
        rm toolchain.tar.zst
        echo "Toolchain ready."
        
    - name: Configure build for YK-L1
      run: |
        cd padavan-ng/trunk
        
        if [ "${{ github.event.inputs.custom_config }}" == "true" ] && [ -f "../../.config" ]; then
          echo "Using custom config file"
          cp ../../.config ./.config
        else
          echo "Using default YK-L1 config"
          cat > .config << EOF
# Generated by GitHub Actions
CONFIG_PRODUCT=MT7620
CONFIG_VENDOR=youku
CONFIG_FIRMWARE_PRODUCT_ID="YK-L1"

# Firmware features
CONFIG_FIRMWARE_TYPE_ROOTFS_IN_RAM=y
CONFIG_FIRMWARE_INCLUDE_LANG_CN=y
CONFIG_FIRMWARE_ENABLE_IPV6=y

# Storage support
CONFIG_FIRMWARE_ENABLE_USB=y
CONFIG_FIRMWARE_ENABLE_UFSD=y
CONFIG_FIRMWARE_ENABLE_FAT=y
CONFIG_FIRMWARE_ENABLE_EXFAT=y
CONFIG_FIRMWARE_INCLUDE_NTFS_3G=y

# Network applications
CONFIG_FIRMWARE_INCLUDE_SHADOWSOCKS=y
CONFIG_FIRMWARE_INCLUDE_TTYD=y
CONFIG_FIRMWARE_INCLUDE_HTOP=y
CONFIG_FIRMWARE_INCLUDE_NANO=y
CONFIG_FIRMWARE_INCLUDE_CURL=y

# OpenVPN
CONFIG_FIRMWARE_INCLUDE_OPENVPN=y

# DDNS services
CONFIG_FIRMWARE_INCLUDE_DDNS_SSL=y

# Web interface
CONFIG_FIRMWARE_INCLUDE_HTTPS=y
CONFIG_FIRMWARE_INCLUDE_SFTP=y
CONFIG_FIRMWARE_INCLUDE_OPENSSH=y

# IPv6 support
CONFIG_FIRMWARE_INCLUDE_IPV6_TUNNEL=y
EOF
        fi
        
        echo "Build configuration ready."
    
    - name: Build firmware
      run: |
        cd padavan-ng/trunk
        ./clear_tree.sh
        ./build_firmware.sh

    - name: Check firmware size
      run: |
        cd padavan-ng/trunk
        FW_FILE_NAME="$(find images -type f -name "*.trx" | head -n 1)"
        if [ -z "$FW_FILE_NAME" ]; then
          echo "Error: Firmware file not found!"
          exit 1
        fi
        
        echo "Firmware file: $FW_FILE_NAME"
        FW_SIZE=$(du -h "$FW_FILE_NAME" | cut -f1)
        echo "Firmware size: $FW_SIZE"
        
        # 将固件文件复制到工作目录，方便后续上传
        mkdir -p ../../output
        cp "$FW_FILE_NAME" ../../output/
        cp .config ../../output/build.config
        
        # 获取文件名，不包含路径
        FILENAME=$(basename "$FW_FILE_NAME")
        echo "FILENAME=$FILENAME" >> $GITHUB_ENV
        echo "BUILD_DATE=$(date +%Y.%m.%d)" >> $GITHUB_ENV
        
    - name: Upload firmware
      uses: actions/upload-artifact@v3
      with:
        name: padavan-ng_YK-L1_${{ env.BUILD_DATE }}
        path: output/
        retention-days: 7

    - name: Create Release
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: output/*
        name: YK-L1 Padavan-NG ${{ github.ref_name }}
        body: |
          YK-L1 Padavan-NG固件
          
          构建时间: ${{ env.BUILD_DATE }}
          固件文件: ${{ env.FILENAME }}
